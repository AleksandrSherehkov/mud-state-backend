generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  password      String
  role          Role     @default(USER)
  characters    Character[]
  refreshTokens RefreshToken[]
  sessions      Session[]
  createdAt     DateTime       @default(now())
}

model Character {
  id         String   @id @default(cuid())
  name       String
  race       String
  class      String
  stats      Json
  locationId String
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
}

model RefreshToken {
  id        String   @id @default(cuid())
  jti       String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked   Boolean  @default(false)
  ip        String?
  userAgent String?
  createdAt DateTime @default(now())

  sessions Session[] @relation("SessionToRefreshToken")

  @@index([userId, revoked])
}

model Session {
  id             String        @id @default(cuid())
  userId         String
  refreshTokenId String?
  refreshToken   RefreshToken? @relation("SessionToRefreshToken", fields: [refreshTokenId], references: [jti], onDelete: SetNull)
  ip             String?
  userAgent      String?
  isActive       Boolean       @default(true)
  startedAt      DateTime      @default(now())
  endedAt        DateTime?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, isActive])
  @@index([refreshTokenId, isActive])
}